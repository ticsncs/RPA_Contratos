name: Deploy RPA Docker

on:
  push:
    branches:
      - master  # Cambia a la rama que usas para producción (main, master, etc.)      
  workflow_dispatch:  # Permite ejecutar manualmente desde la interfaz de GitHub

jobs:
 
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: docker build -f Dockerfile -t alexhm95/rpa_odoo:latest .

      - name: Push Docker image
        run: docker push alexhm95/rpa_odoo:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: "${{ secrets.HOST_SERVER }}"
          username: "${{ secrets.USER_SERVER }}"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port : "${{ secrets.PORT_SERVER }}"
          script: |
            # Verificar si Docker está instalado y disponible
            echo "Verificando instalación de Docker..."
            if ! command -v docker &> /dev/null; then
              echo "Docker no está instalado o no está en el PATH"
              echo "Intentando cargar Docker desde ubicaciones comunes..."
              export PATH="/usr/bin:/usr/local/bin:$PATH"
              
              if ! command -v docker &> /dev/null; then
                echo "Error: Docker no se encuentra disponible en el servidor"
                echo "Por favor, instale Docker o verifique que esté en el PATH"
                exit 1
              fi
            fi
            
            # Verificar que el servicio de Docker esté corriendo
            echo "Verificando que Docker esté corriendo..."
            if ! docker info &> /dev/null; then
              echo "Docker no está corriendo. Intentando iniciar el servicio..."
              sudo systemctl start docker || service docker start || echo "No se pudo iniciar Docker automáticamente"
              sleep 5
              
              if ! docker info &> /dev/null; then
                echo "Error: No se puede conectar al daemon de Docker"
                exit 1
              fi
            fi

            # Descargar la imagen más reciente
            echo "Descargando imagen Docker actualizada..."
            docker pull alexhm95/rpa_odoo:latest

            # Verificar si existe el contenedor
            echo "Verificando si existe contenedor rpa_odoo..."
            EXISTS=$(docker ps -a --filter "name=rpa_odoo" --format "{{.Names}}")
            
            if [ "$EXISTS" == "rpa_odoo" ]; then
              echo "Deteniendo contenedor existente..."
              docker stop rpa_odoo 2>/dev/null || true
              echo "Eliminando contenedor existente..."
              docker rm rpa_odoo 2>/dev/null || true
            fi

            # Limpiar imágenes antiguas para ahorrar espacio
            echo "Limpiando imágenes Docker no utilizadas..."
            docker image prune -f

            # Crear y ejecutar el nuevo contenedor
            echo "Creando nuevo contenedor..."
            docker run -d \
              --name rpa_odoo \
              --restart unless-stopped \
              -e NODE_ENV=production \
              -e TZ=America/Guayaquil \
              -v rpa_files:/app/src/Files \
              -v rpa_sessions:/app/src/Session \
              alexhm95/rpa_odoo:latest

            # Verificar que el contenedor esté corriendo
            echo "Verificando estado del contenedor..."
            docker ps --filter "name=rpa_odoo"
            
            echo "Despliegue completado exitosamente!"
            
        

